Matrix multiplication Doctest
==============================

Using matrix_mul function
---------------------------

import matrix_mul function from 100-matrix_mul

	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Now lets use it:
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22]]

	>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	[[13, 16]]

	>>> matrix_mul([[3.5, 8.0,], [4.9, 2.0]], [[2, 3], [4, 6]])
	[[39.0, 58.5], [17.8, 26.7]]

	>>> matrix_mul([[1, 2], [3, 4]], [[3.5, 8.0,], [4.9, 2.0]])
	[[13.3, 12.0], [30.1, 32.0]]

	>>> matrix_mul([[3.4, 4.6], [1.0, 2.0]], [[3.5, 8.0,], [4.9, 2.0]])
	[[34.44, 36.4], [13.3, 12.0]]

	>>> matrix_mul(2, 3)
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[1, 2]], 3)
	Traceback (most recent call last):
	...
	TypeError: m_b must be a list of lists

	>>> matrix_mul(3, [[1, 2]])
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[1, "s"], [2, 3]], [[2, 3], [4, 6]])
	Traceback (most recent call last):
	...
	TypeError: m_a should contain only integers or floats

	>>> matrix_mul()
	Traceback (most recent call last):
	...
	TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> matrix_mul([[]], [[]])
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty

	>>> matrix_mul([], [])
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty

	>>> matrix_mul([[3.5, 8.0,], [4.9, 2.0]], [])
	Traceback (most recent call last):
	...
	ValueError: m_b can't be empty

	>>> matrix_mul([[3.5, 8.0,], [4.9, 2.0]], [[]])
	Traceback (most recent call last):
	...
	ValueError: m_b can't be empty

	>>> matrix_mul([[1, 2], [3, 4]], [[1, None], [3, 4]])
	Traceback (most recent call last):
	...
	TypeError: m_b should contain only integers or floats

	>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
	TypeError: each row of m_a must be of the same size

	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
	Traceback (most recent call last):
	...
	TypeError: each row of m_b must be of the same size

	>>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2, 3], [3, 4, 5]])
	Traceback (most recent call last):
	...
	ValueError: m_a and m_b can't be multiplied
